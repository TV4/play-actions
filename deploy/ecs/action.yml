name: Deploy
description: Deploy new image to ECS task definition
inputs:
  aws-access-key-id:
    required: true
    description: "AWS access key id"
  aws-secret-access-key:
    required: true
    description: "AWS access key"
  aws-account-id:
    required: true
    description: "AWS account id"
  cluster-name:
    required: true
    description: "Name of ECS cluster"
  service-name:
    required: true
    description: "Name of service"
  docker-registry:
    required: true
    description: "Registry where image is located"
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: eu-west-1

    - id: short-sha
      shell: bash
      run: echo "::set-output name=sha::$(git rev-parse --short HEAD)"

    - name: Deploy Amazon ECS task definition
      env:
        DOCKER_IMAGE: ${{ inputs.docker-registry }}/${{ inputs.service-name }}
        BUILD_TAG: ${{ steps.short-sha.outputs.sha }}
      shell: bash
      run: |
        if [[ -z ${CONTAINER_NAME} ]]; then
          export TARGET_CONTAINER_NAME="main"
        else
          export TARGET_CONTAINER_NAME=$CONTAINER_NAME
        fi
        ecs deploy ${{ inputs.cluster-name }} ${{ inputs.service-name }} --image $TARGET_CONTAINER_NAME $DOCKER_IMAGE:$BUILD_TAG -e $TARGET_CONTAINER_NAME BUILD_VERSION $BUILD_TAG -e $TARGET_CONTAINER_NAME DD_VERSION $BUILD_TAG --region eu-west-1 --access-key-id ${{ inputs.aws-access-key-id }} --secret-access-key ${{ inputs.aws-secret-access-key }} --timeout 1200